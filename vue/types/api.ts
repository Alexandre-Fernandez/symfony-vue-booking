/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/api/auth/register": {
    post: operations["auth_registerUserCollection"];
  };
  "/api/housings": {
    get: operations["getHousingCollection"];
    post: operations["postHousingCollection"];
  };
  "/api/housings/{id}": {
    get: operations["getHousingItem"];
    put: operations["putHousingItem"];
    delete: operations["deleteHousingItem"];
    patch: operations["patchHousingItem"];
  };
  "/api/users": {
    get: operations["getUserCollection"];
    post: operations["postUserCollection"];
  };
  "/api/users/{id}": {
    get: operations["getUserItem"];
  };
}

export interface definitions {
  "Bed-read.Housing": {
    name?: string;
    places?: number;
  };
  "Housing-read.Housing": {
    id?: number;
    size?: number;
    street?: string;
    city?: string;
    zip?: string;
    country?: string;
    /** Format: iri-reference */
    user?: string;
    type?: definitions["HousingType-read.Housing"];
    rooms?: definitions["Room-read.Housing"][];
  };
  "Housing-write.Housing": { [key: string]: unknown };
  "HousingType-read.Housing": {
    name?: string;
  };
  "Room-read.Housing": {
    id?: number;
    size?: number;
    beds?: definitions["RoomBed-read.Housing"][];
  };
  "RoomBed-read.Housing": {
    id?: number;
    quantity?: number;
    type?: definitions["Bed-read.Housing"][];
  };
  "User-read.User": {
    email?: string;
    firstName?: string;
    lastName?: string;
  };
  "User-write.User": { [key: string]: unknown };
  "User.UserRegisterInput-write.User": {
    /** Format: email */
    email: string;
    password: string;
    firstName: string;
    lastName: string;
  };
}

export interface operations {
  auth_registerUserCollection: {
    parameters: {
      body: {
        /** The new User resource */
        user?: definitions["User.UserRegisterInput-write.User"];
      };
    };
    responses: {
      /** User resource created */
      201: {
        schema: definitions["User-read.User"];
      };
      /** Invalid input */
      400: unknown;
      /** Resource not found */
      404: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
  };
  getHousingCollection: {
    parameters: {
      query: {
        /** The collection page number */
        page?: number;
      };
    };
    responses: {
      /** Housing collection response */
      200: {
        schema: definitions["Housing-read.Housing"][];
      };
    };
  };
  postHousingCollection: {
    parameters: {
      body: {
        /** The new Housing resource */
        housing?: definitions["Housing-write.Housing"];
      };
    };
    responses: {
      /** Housing resource created */
      201: {
        schema: definitions["Housing-read.Housing"];
      };
      /** Invalid input */
      400: unknown;
      /** Resource not found */
      404: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
  };
  getHousingItem: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** Housing resource response */
      200: {
        schema: definitions["Housing-read.Housing"];
      };
      /** Resource not found */
      404: unknown;
    };
  };
  putHousingItem: {
    parameters: {
      path: {
        id: string;
      };
      body: {
        /** The updated Housing resource */
        housing?: definitions["Housing-write.Housing"];
      };
    };
    responses: {
      /** Housing resource updated */
      200: {
        schema: definitions["Housing-read.Housing"];
      };
      /** Invalid input */
      400: unknown;
      /** Resource not found */
      404: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
  };
  deleteHousingItem: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** Housing resource deleted */
      204: never;
      /** Resource not found */
      404: unknown;
    };
  };
  patchHousingItem: {
    parameters: {
      path: {
        id: string;
      };
      body: {
        /** The updated Housing resource */
        housing?: definitions["Housing-write.Housing"];
      };
    };
    responses: {
      /** Housing resource updated */
      200: {
        schema: definitions["Housing-read.Housing"];
      };
      /** Invalid input */
      400: unknown;
      /** Resource not found */
      404: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
  };
  getUserCollection: {
    parameters: {
      query: {
        /** The collection page number */
        page?: number;
      };
    };
    responses: {
      /** User collection response */
      200: {
        schema: definitions["User-read.User"][];
      };
    };
  };
  postUserCollection: {
    parameters: {
      body: {
        /** The new User resource */
        user?: definitions["User-write.User"];
      };
    };
    responses: {
      /** User resource created */
      201: {
        schema: definitions["User-read.User"];
      };
      /** Invalid input */
      400: unknown;
      /** Resource not found */
      404: unknown;
      /** Unprocessable entity */
      422: unknown;
    };
  };
  getUserItem: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** User resource response */
      200: {
        schema: definitions["User-read.User"];
      };
      /** Resource not found */
      404: unknown;
    };
  };
}

export interface external {}
